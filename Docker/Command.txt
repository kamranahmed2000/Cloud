docker run hello-world

#Run the following command to take a look at the container image it pulled from Docker Hub:
docker images

#Run the container again
docker run hello-world

#look at the running containers by running the following command
docker ps

#In order to see all containers, including ones that have finished executing, run docker ps -a:
docker ps -a

#look at the logs of a container using docker logs [container_id]. If you want to follow the log's output as the container is running, use the -f option.
docker logs -f [container_id]

#To start an interactive Bash session inside the running container.You can use docker exec to do this.
docker exec -it [container_id] bash

#Examine a container's metadata in Docker by using Docker inspect:
docker inspect [container_id]

#Use --format to inspect specific fields from the returned JSON. For example:
docker inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' [container_id]

#Before you can push or pull images, configure Docker to use the Google Cloud CLI to authenticate requests to Artifact Registry.
#To set up authentication to Docker repositories in the region REGION, run the following command in Cloud Shell:
gcloud auth configure-docker "REGION"-docker.pkg.dev

#Push the container to Artifact Registry
docker build -t "REGION"-docker.pkg.dev/"PROJECT_ID"/my-repository/node-app:0.2 .
docker images
docker push "REGION"-docker.pkg.dev/"PROJECT_ID"/my-repository/node-app:0.2

#Stop and remove all containers:
docker stop $(docker ps -q)
docker rm $(docker ps -aq)

#Run the following command to remove all of the Docker images.
docker rmi "REGION"-docker.pkg.dev/"PROJECT_ID"/my-repository/node-app:0.2
docker rmi node:lts
docker rmi -f $(docker images -aq) # remove remaining images
docker images

#Pull and run the images
docker run -p 4000:80 -d "REGION"-docker.pkg.dev/"PROJECT_ID"/my-repository/node-app:0.2

